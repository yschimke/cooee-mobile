// Code generated by Wire protocol buffer compiler, do not edit.
// Source: com.baulsupp.cooee.p.GoogleTokenExchangeResponse in api.proto
package com.baulsupp.cooee.p

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.sanitize
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.Long
import kotlin.String
import kotlin.Unit
import kotlin.jvm.JvmField
import okio.ByteString

public class GoogleTokenExchangeResponse(
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
  )
  @JvmField
  public val bearerToken: String? = null,
  unknownFields: ByteString = ByteString.EMPTY,
) : Message<GoogleTokenExchangeResponse, GoogleTokenExchangeResponse.Builder>(ADAPTER,
    unknownFields) {
  public override fun newBuilder(): Builder {
    val builder = Builder()
    builder.bearerToken = bearerToken
    builder.addUnknownFields(unknownFields)
    return builder
  }

  public override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is GoogleTokenExchangeResponse) return false
    if (unknownFields != other.unknownFields) return false
    if (bearerToken != other.bearerToken) return false
    return true
  }

  public override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + (bearerToken?.hashCode() ?: 0)
      super.hashCode = result
    }
    return result
  }

  public override fun toString(): String {
    val result = mutableListOf<String>()
    if (bearerToken != null) result += """bearerToken=${sanitize(bearerToken)}"""
    return result.joinToString(prefix = "GoogleTokenExchangeResponse{", separator = ", ", postfix =
        "}")
  }

  public fun copy(bearerToken: String? = this.bearerToken, unknownFields: ByteString =
      this.unknownFields): GoogleTokenExchangeResponse = GoogleTokenExchangeResponse(bearerToken,
      unknownFields)

  public class Builder : Message.Builder<GoogleTokenExchangeResponse, Builder>() {
    @JvmField
    public var bearerToken: String? = null

    public fun bearerToken(bearerToken: String?): Builder {
      this.bearerToken = bearerToken
      return this
    }

    public override fun build(): GoogleTokenExchangeResponse = GoogleTokenExchangeResponse(
      bearerToken = bearerToken,
      unknownFields = buildUnknownFields()
    )
  }

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<GoogleTokenExchangeResponse> = object :
        ProtoAdapter<GoogleTokenExchangeResponse>(
      FieldEncoding.LENGTH_DELIMITED, 
      GoogleTokenExchangeResponse::class, 
      "type.googleapis.com/com.baulsupp.cooee.p.GoogleTokenExchangeResponse", 
      PROTO_3, 
      null, 
      "api.proto"
    ) {
      public override fun encodedSize(`value`: GoogleTokenExchangeResponse): Int {
        var size = value.unknownFields.size
        size += ProtoAdapter.STRING.encodedSizeWithTag(1, value.bearerToken)
        return size
      }

      public override fun encode(writer: ProtoWriter, `value`: GoogleTokenExchangeResponse): Unit {
        ProtoAdapter.STRING.encodeWithTag(writer, 1, value.bearerToken)
        writer.writeBytes(value.unknownFields)
      }

      public override fun encode(writer: ReverseProtoWriter, `value`: GoogleTokenExchangeResponse):
          Unit {
        writer.writeBytes(value.unknownFields)
        ProtoAdapter.STRING.encodeWithTag(writer, 1, value.bearerToken)
      }

      public override fun decode(reader: ProtoReader): GoogleTokenExchangeResponse {
        var bearerToken: String? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> bearerToken = ProtoAdapter.STRING.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return GoogleTokenExchangeResponse(
          bearerToken = bearerToken,
          unknownFields = unknownFields
        )
      }

      public override fun redact(`value`: GoogleTokenExchangeResponse): GoogleTokenExchangeResponse
          = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
